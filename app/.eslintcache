[{"C:\\Users\\RodrigoL\\Desktop\\ToDoApp\\app\\src\\index.js":"1","C:\\Users\\RodrigoL\\Desktop\\ToDoApp\\app\\src\\App.js":"2","C:\\Users\\RodrigoL\\Desktop\\ToDoApp\\app\\src\\components\\title\\Title.js":"3","C:\\Users\\RodrigoL\\Desktop\\ToDoApp\\app\\src\\components\\tasks\\task-list\\TaskList.js":"4","C:\\Users\\RodrigoL\\Desktop\\ToDoApp\\app\\src\\components\\tasks\\create-task\\CreateTask.js":"5","C:\\Users\\RodrigoL\\Desktop\\ToDoApp\\app\\src\\components\\tasks\\task\\Task.js":"6","C:\\Users\\RodrigoL\\Desktop\\ToDoApp\\app\\src\\pages\\Home.js":"7","C:\\Users\\RodrigoL\\Desktop\\ToDoApp\\app\\src\\components\\tasks\\edit-task\\EditTask.js":"8","C:\\Users\\RodrigoL\\Desktop\\ToDoApp\\app\\src\\pages\\Edit.js":"9","C:\\Users\\RodrigoL\\Desktop\\ToDoApp\\app\\src\\components\\button\\Button.js":"10","C:\\Users\\RodrigoL\\Desktop\\ToDoApp\\app\\src\\hooks\\useFetch.js":"11","C:\\Users\\RodrigoL\\Desktop\\ToDoApp\\app\\src\\components\\alert\\Alert.js":"12","C:\\Users\\RodrigoL\\Desktop\\ToDoApp\\app\\src\\utils\\Api.js":"13"},{"size":214,"mtime":1612374092956,"results":"14","hashOfConfig":"15"},{"size":457,"mtime":1612380921417,"results":"16","hashOfConfig":"15"},{"size":111,"mtime":1612376369723,"results":"17","hashOfConfig":"15"},{"size":463,"mtime":1612461429540,"results":"18","hashOfConfig":"15"},{"size":1604,"mtime":1612461151807,"results":"19","hashOfConfig":"15"},{"size":1528,"mtime":1612489735734,"results":"20","hashOfConfig":"15"},{"size":792,"mtime":1612526557696,"results":"21","hashOfConfig":"15"},{"size":514,"mtime":1612462929491,"results":"22","hashOfConfig":"15"},{"size":1989,"mtime":1612488923872,"results":"23","hashOfConfig":"15"},{"size":185,"mtime":1612488749829,"results":"24","hashOfConfig":"15"},{"size":608,"mtime":1612464669727,"results":"25","hashOfConfig":"15"},{"size":162,"mtime":1612458392320,"results":"26","hashOfConfig":"15"},{"size":94,"mtime":1612460876366,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"y4gg1y",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"C:\\Users\\RodrigoL\\Desktop\\ToDoApp\\app\\src\\index.js",[],["60","61"],"C:\\Users\\RodrigoL\\Desktop\\ToDoApp\\app\\src\\App.js",[],"C:\\Users\\RodrigoL\\Desktop\\ToDoApp\\app\\src\\components\\title\\Title.js",[],"C:\\Users\\RodrigoL\\Desktop\\ToDoApp\\app\\src\\components\\tasks\\task-list\\TaskList.js",[],"C:\\Users\\RodrigoL\\Desktop\\ToDoApp\\app\\src\\components\\tasks\\create-task\\CreateTask.js",["62"],"import { useState } from 'react'\r\nimport { ENDPOINT_TASKS } from '../../../utils/Api'\r\nimport Button from '../../button/Button'\r\nimport './CreateTask.css'\r\n\r\nconst CreateTask = ({ tasks, setTasks }) => {\r\n  const [title, setTitle] = useState('')\r\n  const [error, setError] = useState(false)\r\n  const [isLoading, setIsLoading] = useState(false)\r\n\r\n  const handleChangeTitle = (e) => setTitle(e.target.value)\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    if (!title) return alert('Complete the field!')\r\n    setIsLoading(true)\r\n\r\n    const newTask = {\r\n      title,\r\n      isCompleted: false,\r\n    }\r\n\r\n    const init = {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(newTask),\r\n    }\r\n\r\n    fetch(ENDPOINT_TASKS, init)\r\n      .then((response) => {\r\n        if (!response.ok) throw new Error('Error creating task')\r\n        setTasks([newTask, ...tasks])\r\n        e.target.reset()\r\n      })\r\n      .catch((err) => setError(true))\r\n      .finally(() => setIsLoading(false))\r\n  }\r\n\r\n  return (\r\n    <form\r\n      className='create-task-container'\r\n      autoComplete='off'\r\n      onSubmit={(e) => handleSubmit(e)}\r\n    >\r\n      <input\r\n        type='text'\r\n        name='title'\r\n        value={title}\r\n        placeholder='Insert task...'\r\n        className='input-submit'\r\n        onChange={(e) => handleChangeTitle(e)}\r\n      />\r\n      {isLoading ? (\r\n        <Button type='submit' text='Saving...' />\r\n      ) : (\r\n        <Button type='submit' text='Create task' />\r\n      )}\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default CreateTask\r\n","C:\\Users\\RodrigoL\\Desktop\\ToDoApp\\app\\src\\components\\tasks\\task\\Task.js",[],["63","64"],"C:\\Users\\RodrigoL\\Desktop\\ToDoApp\\app\\src\\pages\\Home.js",["65"],"import useFetch from '../hooks/useFetch'\r\nimport Alert from '../components/alert/Alert'\r\nimport Title from '../components/title/Title'\r\nimport TaskList from '../components/tasks/task-list/TaskList'\r\nimport CreateTask from '../components/tasks/create-task/CreateTask'\r\nimport { ENDPOINT_TASKS } from '../utils/Api'\r\n\r\nconst Home = () => {\r\n  const { data: tasks, setData, error, isLoading } = useFetch(\r\n    ENDPOINT_TASKS,\r\n    'GET'\r\n  )\r\n\r\n  return (\r\n    <>\r\n      {error && <Alert type='warning' info='Error with API.' />}\r\n      <Title text='To-Do List' />\r\n      {tasks && !error ? (\r\n        <TaskList tasks={tasks} setTasks={setData} />\r\n      ) : (\r\n        <h4>Empty list!</h4>\r\n      )}\r\n      <CreateTask tasks={tasks} setTasks={setData} />\r\n    </>\r\n  )\r\n}\r\nexport default Home\r\n","C:\\Users\\RodrigoL\\Desktop\\ToDoApp\\app\\src\\components\\tasks\\edit-task\\EditTask.js",[],"C:\\Users\\RodrigoL\\Desktop\\ToDoApp\\app\\src\\pages\\Edit.js",["66"],"import { useState, useEffect } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { Link } from 'react-router-dom'\r\nimport { ENDPOINT_TASKS } from '../utils/Api'\r\nimport Title from '../components/title/Title'\r\nimport Button from '../components/button/Button'\r\nimport '../components/tasks/edit-task/EditTask.css'\r\n\r\nconst Edit = () => {\r\n  const { id } = useParams()\r\n  const [task, setTask] = useState(null)\r\n\r\n  useEffect(() => {\r\n    fetch(`${ENDPOINT_TASKS}/${id}`, { method: 'GET' })\r\n      .then((response) => response.json())\r\n      .then((object) => {\r\n        setTask(object)\r\n        console.log(task)\r\n      })\r\n  }, [])\r\n\r\n  const handleChangeTitle = (e) => setTask({ title: e.target.value })\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    if (!task.title) return alert('Complete the field!')\r\n\r\n    const init = {\r\n      method: 'PUT',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ title: task.title }),\r\n    }\r\n\r\n    fetch(`${ENDPOINT_TASKS}/${id}`, init).then((response) => {\r\n      if (!response.ok) throw new Error('Error creating task')\r\n      e.target.reset()\r\n    })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {task && (\r\n        <>\r\n          <Title text={`Editing task \"${task.title}\"`} />\r\n          <form\r\n            className='edit-task-container'\r\n            autoComplete='off'\r\n            onSubmit={(e) => handleSubmit(e)}\r\n          >\r\n            <input\r\n              type='text'\r\n              name='title'\r\n              value={task.title}\r\n              className='input-submit'\r\n              onChange={(e) => handleChangeTitle(e)}\r\n            />\r\n            <div className='edit-task-container__cta'>\r\n              <Button type='submit' text='Save' />\r\n              <Link to='/'>\r\n                <Button type='button' text='Cancel' classCss='btn-cancel' />\r\n              </Link>\r\n            </div>\r\n          </form>\r\n        </>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Edit\r\n","C:\\Users\\RodrigoL\\Desktop\\ToDoApp\\app\\src\\components\\button\\Button.js",[],"C:\\Users\\RodrigoL\\Desktop\\ToDoApp\\app\\src\\hooks\\useFetch.js",["67"],"import { useEffect, useState } from 'react'\r\n\r\nconst useFetch = (endpoint, method) => {\r\n  const [data, setData] = useState([])\r\n  const [error, setError] = useState(false)\r\n  const [isLoading, setIsLoading] = useState(true)\r\n\r\n  useEffect(() => {\r\n    fetch(endpoint, { method })\r\n      .then((response) => response.json())\r\n      .then((object) => setData(object))\r\n      .catch((err) => {\r\n        console.log(err)\r\n        setError(true)\r\n      })\r\n      .finally(() => setIsLoading(false))\r\n  }, [])\r\n\r\n  return {\r\n    data,\r\n    setData,\r\n    error,\r\n    isLoading,\r\n  }\r\n}\r\n\r\nexport default useFetch\r\n","C:\\Users\\RodrigoL\\Desktop\\ToDoApp\\app\\src\\components\\alert\\Alert.js",[],"C:\\Users\\RodrigoL\\Desktop\\ToDoApp\\app\\src\\utils\\Api.js",[],{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":8,"column":10,"nodeType":"74","messageId":"75","endLine":8,"endColumn":15},{"ruleId":"68","replacedBy":"76"},{"ruleId":"70","replacedBy":"77"},{"ruleId":"72","severity":1,"message":"78","line":9,"column":40,"nodeType":"74","messageId":"75","endLine":9,"endColumn":49},{"ruleId":"79","severity":1,"message":"80","line":20,"column":6,"nodeType":"81","endLine":20,"endColumn":8,"suggestions":"82"},{"ruleId":"79","severity":1,"message":"83","line":17,"column":6,"nodeType":"81","endLine":17,"endColumn":8,"suggestions":"84"},"no-native-reassign",["85"],"no-negated-in-lhs",["86"],"no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar",["85"],["86"],"'isLoading' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'id' and 'task'. Either include them or remove the dependency array.","ArrayExpression",["87"],"React Hook useEffect has missing dependencies: 'endpoint' and 'method'. Either include them or remove the dependency array.",["88"],"no-global-assign","no-unsafe-negation",{"desc":"89","fix":"90"},{"desc":"91","fix":"92"},"Update the dependencies array to be: [id, task]",{"range":"93","text":"94"},"Update the dependencies array to be: [endpoint, method]",{"range":"95","text":"96"},[643,645],"[id, task]",[501,503],"[endpoint, method]"]